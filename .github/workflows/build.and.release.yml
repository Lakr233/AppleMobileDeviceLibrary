name: Fetch Update and Publish Release

on:
  workflow_dispatch:
  schedule:
    - cron: "4 5 * * *"

jobs:
  fetch-and-release:
    runs-on: macos-14
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v4.1.1

      - name: Build Artifacts
        run: |
          brew install libtool autoconf automake pkgconfig coreutils bash zip swiftformat
          export PATH="$PATH:/opt/homebrew/bin:/opt/homebrew/sbin"
          /usr/sbin/softwareupdate --install-rosetta --agree-to-license
          ./Scripts/build.sh clean
          mv build/build.spm/ AppleMobileDeviceLibrary
          mv build/build.binpack/binpack.tar .
          mv src.version AppleMobileDeviceLibrary/.version
          cat binpack.tar | gzip > binpack.tar.gz

      # now we have AppleMobileDeviceLibrary and binpack.tar.gz at the root of the repository

      - name: Fetch Lastest Release
        uses: robinraju/release-downloader@v1.8
        with:
          latest: true
          fileName: "version.lock.txt"
        continue-on-error: true

      # if "version.lock.txt" is equal to "AppleMobileDeviceLibrary/.version" then skip all sub steps

      - name: Compare Version
        run: |
          if [ -f version.lock.txt ] && [ -f AppleMobileDeviceLibrary/.version ]; then
            if [ "$(cat version.lock.txt)" == "$(cat AppleMobileDeviceLibrary/.version)" ]; then
              echo "[*] version.lock.txt is equal to AppleMobileDeviceLibrary/.version"
              echo "UPDATE_NEEDED=false" >> $GITHUB_ENV
              exit 0
            fi
          fi

          echo "[*] version.lock.txt is not equal to AppleMobileDeviceLibrary/.version"
          echo "UPDATE_NEEDED=true" >> $GITHUB_ENV

          rm -f version.lock.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare Release
        if: env.UPDATE_NEEDED == 'true'
        run: |
          mv AppleMobileDeviceLibrary/.version version.lock.txt
          RELEASE_TAG="1.0.$(date +%s)"
          echo "RELEASE_TAG=$RELEASE_TAG" >> $GITHUB_ENV
          STORAGE_RELEASE_TAG="storage.$(uuidgen)"
          echo "STORAGE_RELEASE_TAG=$STORAGE_RELEASE_TAG" >> $GITHUB_ENV

          echo "[*] release tag: $RELEASE_TAG"
          echo "[*] storage release tag: $STORAGE_RELEASE_TAG"

          mv AppleMobileDeviceLibrary/BinaryTargets/*.zip .
          ls -l *.zip

          ./Scripts/action.build.final.spm.sh $STORAGE_RELEASE_TAG ${{ github.repository }}

      - name: GitHub Commit & Push
        if: env.UPDATE_NEEDED == 'true'
        uses: actions-js/push@v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Make Release
        if: env.UPDATE_NEEDED == 'true'
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ env.RELEASE_TAG }}
          body: |
            # Package
            This release was made by automation.
          draft: false
          prerelease: false
          files: |
            version.lock.txt

      - name: Make Storage Release
        if: env.UPDATE_NEEDED == 'true'
        uses: softprops/action-gh-release@v0.1.15
        with:
          tag_name: ${{ env.STORAGE_RELEASE_TAG }}
          body: |
            # Updated Release
            This release was made by automation.
          draft: false
          prerelease: false
          files: |
            version.lock.txt
            libusbmuxd.xcframework.zip
            libtatsu.xcframework.zip
            libimobiledevice_glue.xcframework.zip
            libimobiledevice.xcframework.zip
            libplist.xcframework.zip
            libssl.xcframework.zip
            binpack.tar.gz
